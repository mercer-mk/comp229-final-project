{"version":3,"sources":["webpack:///src/app/pages/home/home.component.ts","webpack:///src/app/pages/home/home.component.html","webpack:///src/app/partials/header/header.component.ts","webpack:///src/app/partials/header/header.component.html","webpack:///src/app/pages/open-survey/open-survey.component.ts","webpack:///src/app/pages/open-survey/open-survey.component.html","webpack:///src/app/pages/survey-management/survey-management.component.ts","webpack:///src/app/pages/survey-management/survey-management.component.html","webpack:///src/app/pages/users/users.component.ts","webpack:///src/app/pages/users/users.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/partials/footer/footer.component.ts","webpack:///src/app/partials/footer/footer.component.html","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.component.html","webpack:///src/app/partials/base-page/base-page.component.ts","webpack:///src/app/partials/base-page/base-page.component.html","webpack:///src/app/pages/edit-user/edit-user.component.ts","webpack:///src/app/pages/edit-user/edit-user.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth.service.ts","webpack:///src/app/pages/response-survey/response-survey.component.ts","webpack:///src/app/pages/response-survey/response-survey.component.html","webpack:///src/app/common.service.ts","webpack:///src/app/pages/survey/survey.component.ts","webpack:///src/app/pages/survey/survey.component.html","webpack:///src/app/survey.service.ts","webpack:///src/app/pages/registration/registration.component.ts","webpack:///src/app/pages/registration/registration.component.html","webpack:///src/app/auth.guard.ts","webpack:///src/app/pages/edit-survey/edit-survey.component.ts","webpack:///src/app/pages/edit-survey/edit-survey.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/user.service.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["HomeComponent","route","selector","templateUrl","styleUrls","HeaderComponent","auth","router","logout","OpenSurveyComponent","service","form","saveSurvey","formatResponse","value","subscribe","data","navigate","responses","prop","Object","prototype","hasOwnProperty","call","push","question_number","parseInt","question_response","survey_id","survey","_id","survey_response","window","history","state","onSubmit","SurveyManagementComponent","getSurveys","surveys","id","deleteSurvey","UsersComponent","getUsers","users","user","deleteUser","createUser","environment","production","apiUrl","FooterComponent","LoginComponent","login","username","password","pipe","result","err","error","submit","BasePageComponent","title","snapshot","EditUserComponent","method","updateUser","saveUser","forename","AppComponent","tokenGetter","localStorage","getItem","AppModule","provide","useClass","forRoot","config","declarations","imports","providers","bootstrap","AuthService","http","post","console","log","setItem","token","removeItem","providedIn","ResponseSurveyComponent","formatData","formattedData","questions","forEach","question","index","answers","response","label","getResponses","CommonService","httpClient","baseUrl","surveyId","SurveyComponent","SurveyService","get","RegistrationComponent","signUp","AuthGuard","authService","EditSurveyComponent","updateSurvey","labels","styles","includes","style","description","addField","routes","path","redirectTo","pathMatch","component","canActivate","AppRoutingModule","exports","UserService","put","bootstrapModule","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {BasePageComponent } from '../../partials/base-page/base-page.component';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent extends BasePageComponent implements OnInit {\n\n  constructor(route : ActivatedRoute) {\n    super(route);\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"body-wrapper\">\n    <div class=\"center_content\">\n        <h1>The answer to your questions!</h1>\n        <p style=\"margin-bottom: 50px;\">Survey is a Angular based Web-Application developed by Me\n            that allows anyone to create their own surveys and have controll over their answers. This powerful\n            tool delivers a complete survey and user management system .</p>\n        <h2 style=\"margin-bottom: 30px;\">Get to know Us</h2>\n        <div class=\"team_container center\">\n            <img src=\"assets/prem.jpg\" alt=\"Prem Patel\" class=\"team_img\">\n            <h4 class=\"team_title\">Database Programmer </h4>\n            <p class=\"team_text\">Prem Patel</p>\n        </div> <div class=\"team_container center\">\n            <img src=\"assets/sahil.jpg\" alt=\"Milan Khunt\" class=\"team_img\">\n            <h4 class=\"team_title\">Database Programmer</h4>\n            <p class=\"team_text\">Sahil Sutariya</p>\n        </div> <div class=\"team_container center\">\n            <img src=\"assets/ohm.jpg\" alt=\"Milan Khunt\" class=\"team_img\">\n            <h4 class=\"team_title\">Frontend Developer</h4>\n            <p class=\"team_text\">Ohm Patel</p>\n        </div> <div class=\"team_container center\">\n            <img src=\"assets/dhurvi.jpg\" alt=\"Milan Khunt\" class=\"team_img\">\n            <h4 class=\"team_title\">Frontend Developer</h4>\n            <p class=\"team_text\">Dhruvi Mandaviya</p>\n        </div> <div class=\"team_container center\">\n            <img src=\"assets/Maharsh.jpg\" alt=\"Milan Khunt\" class=\"team_img\">\n            <h4 class=\"team_title\">Backend Developer</h4>\n            <p class=\"team_text\">Maharsh Patel</p>\n        </div>\n        <div class=\"team_container center\">\n            <img src=\"assets/milan.jpg\" alt=\"Milan Khunt\" class=\"team_img\">\n            <h4 class=\"team_title\">Backend Developer</h4>\n            <p class=\"team_text\">Milankumar Khunt</p>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport{ ActivatedRoute} from '@angular/router';\nimport { AuthService } from '../../auth.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  isLogged: boolean;\n\n  constructor(public auth: AuthService,private router: Router, private route:ActivatedRoute) { }\n\n  logout() {\n    this.auth.logout();\n  }\n\n  ngOnInit(): void {}\n\n}\n","<!-- Main Navigation -->\n\n\n\n<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n\n  <a class=\"navbar-brand\" href=\"\"><img src='../../../assets/logo.jpg' height=\"40px\" width=\"140px\"></a>\n  <!--Add Logo in future-->\n\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n    aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav ml-auto\">\n      <li class=\"nav-item\"><a class=\"nav-link\" href=\"/home\">Home </a></li>\n      <li class=\"nav-item\"><a class=\"nav-link\" href=\"/survey\" routerLinkActive=\"active\"> Surveys </a></li>\n      <li class=\"nav-item\"><a class=\"nav-link\" href=\"/survey-management\" routerLinkActive=\"active\"\n          *ngIf=\"this.auth.loggedIn\"> Surveys Management </a></li>\n\n      <li class=\"nav-item\"><a class=\"nav-link btn-info\" href=\"/login\" *ngIf=\"!this.auth.loggedIn\"><i\n            class=\"fas fa-lg fa-sign-in-alt\"></i>Login </a></li>\n      <li class=\"nav-item\"><a class=\"nav-link\" href=\"/registration\" *ngIf=\"!this.auth.loggedIn\"> Signup </a></li>\n      <li class=\"nav-item\"><a class=\"nav-link btn-danger\" (click)=\"logout()\" href=\"/home\" *ngIf=\"this.auth.loggedIn\"><i\n            class=\"fas fa-lg fa-sign-out-alt\"></i>Logout</a>\n      </li>\n    </ul>\n  </div>\n\n</nav>","import { Component, OnInit } from '@angular/core';\nimport{ ActivatedRoute} from '@angular/router';\nimport {CommonService} from '../../common.service';\nimport{ Router} from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n@Component({\n  selector: 'app-open-survey',\n  templateUrl: './open-survey.component.html',\n  styleUrls: ['./open-survey.component.css']\n})\nexport class OpenSurveyComponent implements OnInit {\n  survey: any;\n  responses: [];\n  constructor(private route:ActivatedRoute,private router:Router, private service: CommonService) { }\n  onSubmit(form){\n    this.service.saveSurvey(this.formatResponse(form.form.value)).subscribe(data=>this.router.navigate(['/survey']));\n  }\n\n  formatResponse(value){\n    let responses = [];\n    for (var prop in value) {\n      if (Object.prototype.hasOwnProperty.call(value, prop)) {\n        responses.push({question_number: parseInt(prop), question_response: value[prop]})\n      }\n    }\n    return {\n      survey_id: this.survey._id,\n      survey_response: responses\n    }\n  }\n  ngOnInit(): void {\n    this.survey = window.history.state;\n  }\n\n}\n","<div class=\"body-wrapper\">\n    <div class=\"center_form card\">\n        <form #form=\"ngForm\" (ngSubmit)=\"onSubmit(form)\">\n            <h3>{{survey.title}}</h3>\n            <p class=\"card-text\">{{survey.description}}</p>\n            <div *ngFor='let question of survey.questions; index as i' class=\"form-group\">\n                <label for=\"question_{{i}}_label\">{{i+1}}&nbsp;{{question.label}}</label>\n                &nbsp;<input *ngIf=\"question.style==1\" class=\"form-control\" id=\"{{i}}\" name=\"{{i}}\" [ngModel]=\"question.value\">\n\n\n               &nbsp; <div *ngIf=\"question.style==2\">\n                    <input type=\"radio\" id=\"NotGood\" name=\"satisfaction\" value=\"Not Good\"  id=\"{{i}}\"  name=\"{{i}}\" [ngModel]=\"question.value\">&nbsp;\n                    <label for=\"NotGood\"> Not Good</label><br>\n                    <input type=\"radio\" id=\"Okay\" name=\"satisfaction\" value=\"Okay\"  id=\"{{i}}\"  name=\"{{i}}\" [ngModel]=\"question.value\">&nbsp;\n                    <label for=\"Okay\"> Okay</label><br>\n                    <input type=\"radio\" id=\"Good\" name=\"satisfaction\" value=\"Good\"  id=\"{{i}}\"  name=\"{{i}}\" [ngModel]=\"question.value\">&nbsp;\n                    <label for=\"Good\"> Good</label><br>\n                </div>\n\n\n            </div>\n            <div>\n                <button type=\"submit\" class=\"survey_button\">Submit</button>\n            </div>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {BasePageComponent } from '../../partials/base-page/base-page.component';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {SurveyService} from '../../survey.service';\nimport { AuthService } from '../../auth.service';\n@Component({\n  selector: 'app-survey-management',\n  templateUrl: './survey-management.component.html',\n  styleUrls: ['./survey-management.component.css']\n})\nexport class SurveyManagementComponent extends BasePageComponent implements OnInit {\n\n  constructor(public auth: AuthService, route : ActivatedRoute, private router: Router, private service: SurveyService) {\n    super(route);\n  }\n  surveys:any;\n\n  getSurveys(){\n    this.service.getSurveys().subscribe(data => this.surveys = data);\n  }\n\n  editSurvey(survey){\n    this.router.navigate(['/edit-survey'],{state: survey})\n  }\n\n  deleteSurvey(id){\n    this.service.deleteSurvey(id).subscribe(data=>this.getSurveys());\n  }\n\n  createSurvey(){\n    this.router.navigate(['/edit-survey'],{state: null})\n  }\n\n  responseSurvey(survey){\n    this.router.navigate(['/response-survey'],{state: survey})\n  }\n\n  ngOnInit(): void {\n    this.getSurveys();\n  }\n\n}\n","<div class=\"body-wrapper\">\n    <div class=\"center_form\">\n    <div class=\"survey_description\">\n    <app-base-page></app-base-page>\n    </div>\n  \n    <div *ngIf=\"this.auth.loggedIn\">\n    <a href=\"javascript:void(0);\" (click)=\"createSurvey()\" class=\"card_button\">Create</a>\n    </div>\n    <table>\n        <tr>\n            <th>Title</th>\n            <th>Description</th>\n            <th>Answers</th>\n            <th>Edit</th>\n            <th>Delete</th>\n        </tr>\n        <tr *ngFor='let survey of surveys'>\n            <td class=\"title_table\">{{survey.title}}</td>\n            <td>{{survey.description}}</td>\n            <td><a href=\"javascript:void(0);\" (click)=\"responseSurvey(survey)\" class=\"editable_button\" *ngIf=\"this.auth.loggedIn\">☰</a></td>\n            <td><a href=\"javascript:void(0);\" (click)=\"editSurvey(survey)\" class=\"editable_button\" *ngIf=\"this.auth.loggedIn\">✎</a></td>\n            <td><a href=\"javascript:void(0);\" (click)=\"deleteSurvey(survey._id)\" class=\"editable_button\" *ngIf=\"this.auth.loggedIn\">✕</a></td>\n        </tr>\n    </table>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport {BasePageComponent } from '../../partials/base-page/base-page.component';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {UserService} from '../../user.service';\nimport { AuthService } from '../../auth.service';\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent extends BasePageComponent implements OnInit {\n\n  constructor(private auth: AuthService, route : ActivatedRoute, private router: Router, private service: UserService) {\n    super(route);\n  }\n  users: any;\n  \n  getUsers(){\n    this.service.getUsers().subscribe(data => this.users = data);\n  }\n\n  editUser(user){\n    this.router.navigate(['/edit-user'],{state: user})\n  }\n\n  deleteUser(user){\n    this.service.deleteUser(user).subscribe(data=>this.getUsers());\n  }\n\n  createUser(){\n    this.router.navigate(['/edit-user'],{state: null})\n  }\n  ngOnInit(): void {\n    this.getUsers();\n  }\n\n}\n","<div>\n    <a href=\"javascript:void(0);\" (click)=\"createUser()\" class=\"card_button\">Create</a>\n</div>\n\n<table>\n    <thead>\n        <tr>\n            <th>First Name</th>\n            <th>Last Name</th>\n            <th>Username</th>\n            <th>Email</th>\n            <th>Edit</th>\n            <th>Delete</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor='let user of users'>\n            <td>{{user.forename}}</td>\n            <td>{{user.surname}}</td>\n            <td>{{user.username}}</td>\n            <td>{{user.email}}</td>\n            <td class=\"button_align\">\n                <a href=\"javascript:void(0);\" (click)=\"editUser(user)\" class=\"editable_button\">✎</a>\n            </td>\n            <td class=\"button_align\">\n                <a href=\"javascript:void(0);\" (click)=\"deleteUser(user)\" class=\"editable_button\">✕</a>\n            </td>\n        </tr>\n    </tbody>\n</table>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  // apiUrl: 'http://localhost:8000/api'\n  apiUrl: 'http://localhost:8000/api'\n};\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport{ ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n  title: string;\n\n  constructor(private route:ActivatedRoute) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Bottom Nav -->\n<footer>\n  <nav class=\"survey_footer\">\n    <h6 class=\"display-6 navbar-text\">&copy; Copyright 2023. All Rights reserved.</h6>\n  </nav>\n</footer>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../auth.service';\nimport { Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  public username: string;\n  public password: string;\n  public error: string;\n\n  constructor(private auth: AuthService, private router: Router) { }\n\n  public submit() {\n    this.auth.login(this.username, this.password)\n        .pipe(first())\n        .subscribe(\n            result => this.router.navigate(['home']),\n            err => this.error = 'Could not authenticate'\n        );\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"body-wrapper\">\n<h1>Sign In</h1>\n<h4 *ngIf=\"error\">{{error}}</h4>\n<div class=\"registration_form form_border\">\n<form (ngSubmit)=\"submit()\">\n    <label for=\"username\">Username</label>\n    <input id=\"username\" type=\"text\" name=\"username\" class=\"form-control\" [(ngModel)]=\"username\" />\n\n    <div class=\"survey_label\">\n    <label for=\"password\">Password</label>\n    </div>\n    <input id=\"password\" type=\"password\" name=\"password\" class=\"form-control\" [(ngModel)]=\"password\" />\n\n    <br>\n    <div>\n        <button class=\"survey_button\" type=\"submit\">Login</button>\n    </div>\n</form>\n</div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport{ ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-base-page',\n  templateUrl: './base-page.component.html',\n  styleUrls: ['./base-page.component.css']\n})\nexport class BasePageComponent implements OnInit {\n  title: string;\n\n  constructor(private route:ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.title=this.route.snapshot.data.title;\n  }\n\n}\n","<div class=\"land\">\n<h1>{{title}} Page</h1>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport{ Router} from '@angular/router';\nimport {UserService} from '../../user.service';\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.css']\n})\nexport class EditUserComponent implements OnInit {\n  user: any;\n  method: string;\n  constructor(private router:Router, private service: UserService) { }\n  onSubmit(form){\n    let value = form.form.value;\n    if(this.method === 'edit'){\n      this.service.updateUser(value).subscribe(data=>this.router.navigate(['/users']));\n    }else{\n      this.service.saveUser(value).subscribe(data=>this.router.navigate(['/users']));\n    }\n  }\n  ngOnInit(): void {\n    this.user = window.history.state;\n    if(!this.user.forename){\n      this.method = 'create';\n    }else{\n      this.method = 'edit';\n    }\n  }\n\n}\n","<div class=\"body-wrapper\">\n  <div class=\"center_form form_border\">\n    <form #form=\"ngForm\" (ngSubmit)=\"onSubmit(form)\">\n        <label for=\"forenameLabel\">First Name</label>\n        <input required type=\"text\" class=\"form-control\" id=\"forename\" name=\"forename\" [ngModel]=\"user.forename\">\n        <label for=\"surnameLabel\">Last Name</label>\n        <input required type=\"text\" class=\"form-control\" id=\"surname\" name=\"surname\" [ngModel]=\"user.surname\">\n        <label for=\"emailLabel\">Email</label>\n        <input required type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" [ngModel]=\"user.email\">\n        <label for=\"usernameLabel\">Username</label>\n        <input required type=\"text\" class=\"form-control\" id=\"username\" name=\"username\" [ngModel]=\"user.username\">\n        <label for=\"passwordLabel\">Password</label>\n        <input required type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" [ngModel]=\"user.password\">\n        <div>\n          <button type=\"submit\" class=\"survey_button\">Submit</button>\n      </div>\n      </form>\n    </div>\n    </div>\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Curvey-Project';\n\n  constructor(private auth: AuthService, private router: Router) { }\n\n  \n}\n","<app-header></app-header>\n\n<router-outlet></router-outlet>\n\n<app-footer></app-footer>\n\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { JwtModule } from '@auth0/angular-jwt';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { CommonService } from './common.service';\nimport { SurveyService } from './survey.service';\nimport { UserService } from './user.service';\nimport { AuthService } from './auth.service';\nimport { AuthGuard } from './auth.guard';\n\nimport { AppComponent } from './app.component';\nimport { BasePageComponent } from './partials/base-page/base-page.component';\nimport { HeaderComponent } from './partials/header/header.component';\nimport { FooterComponent } from './partials/footer/footer.component';\n\nimport { HomeComponent } from './pages/home/home.component';\nimport { SurveyComponent } from './pages/survey/survey.component';\nimport { OpenSurveyComponent } from './pages/open-survey/open-survey.component';\nimport { EditSurveyComponent } from './pages/edit-survey/edit-survey.component';\nimport { ResponseSurveyComponent } from './pages/response-survey/response-survey.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { RegistrationComponent } from './pages/registration/registration.component';\nimport { UsersComponent } from './pages/users/users.component';\nimport { EditUserComponent } from './pages/edit-user/edit-user.component';\nimport { SurveyManagementComponent } from './pages/survey-management/survey-management.component';\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\n\nexport function tokenGetter() {\n  return localStorage.getItem('access_token');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BasePageComponent,\n    HeaderComponent,\n    FooterComponent,\n    HomeComponent,\n    SurveyComponent,\n    OpenSurveyComponent,\n    EditSurveyComponent,\n    ResponseSurveyComponent,\n    LoginComponent,\n    RegistrationComponent,\n    UsersComponent,\n    EditUserComponent,\n    SurveyManagementComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter,\n        //whitelistedDomains: ['localhost:3000'], // Change this for production\n        //blacklistedRoutes: ['localhost:3000/users/signIn'] // Change this for production\n      },\n    }),\n    AppRoutingModule,\n  ],\n  providers: [\n    CommonService,\n    SurveyService,\n    UserService,\n    AuthService,\n    AuthGuard,\n    { provide: LocationStrategy, useClass: HashLocationStrategy }\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  login(username: string, password: string): Observable<boolean> {\n    return this.http.post<{ token: string }>(`${this.apiUrl}/users/signIn`, { username: username, password: password })\n      .pipe(\n        map(result => {\n          console.log(result);\n          localStorage.setItem('access_token', result.token);\n          return true;\n        })\n      );\n  }\n\n  logout() {\n    localStorage.removeItem('access_token');\n  }\n\n  public get loggedIn(): boolean {\n    return (localStorage.getItem('access_token') !== null);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport{ ActivatedRoute} from '@angular/router';\nimport {CommonService} from '../../common.service';\nimport{ Router} from '@angular/router';\n@Component({\n  selector: 'app-response-survey',\n  templateUrl: './response-survey.component.html',\n  styleUrls: ['./response-survey.component.css']\n})\nexport class ResponseSurveyComponent implements OnInit {\n  survey: any;\n  responses: any;\n  constructor(private route:ActivatedRoute,private router:Router, private service: CommonService) { }\n  getResponses(survey){\n    this.service.getSurveys(survey._id).subscribe(data => this.responses = this.formatData(data));\n  }\n  formatData(data){\n    let formattedData = [];\n    this.survey.questions.forEach((question, index)=>{\n        let answers = [];\n        data.forEach((response) => {\n          answers.push(response.survey_response[index].question_response);\n        });\n        formattedData.push({\n          label: question.label,\n          answers: answers\n        })\n    });\n    return formattedData;\n  }\n  ngOnInit(): void {\n    this.survey = window.history.state;\n    this.getResponses(this.survey);\n  }\n\n}\n","<div class=\"body-wrapper\">\n  \n  <h1>Survey Answers</h1>\n      <div *ngFor='let response of responses' class=\"card card_survey\"> \n          <div class=\"card-body\">\n            <h5 class=\"card-title\">{{response.label}}</h5>\n            <div *ngFor='let answer of response.answers'>{{answer}}</div>\n            <div *ngIf=\"response.answers.length == 0\" class=\"card-title\">No Responses for this question</div>\n          </div>\n      </div>\n    \n  </div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonService {\n  private readonly baseUrl = 'http://localhost:8000/api/survey_response';\n\n  constructor(private httpClient: HttpClient) { }\n\n  saveSurvey(survey) {\n    return this.httpClient.post(this.baseUrl, survey);\n  }\n\n  updateSurvey(survey) {\n    return this.httpClient.post(`${this.baseUrl}/${survey._id}`, survey);\n  }\n\n  getSurveys(surveyId) {\n    return this.httpClient.post(`${this.baseUrl}/list/${surveyId}`, surveyId);\n  }\n\n  deleteSurvey(id) {\n    return this.httpClient.post(`${this.baseUrl}/delete`, { _id: id });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {BasePageComponent } from '../../partials/base-page/base-page.component';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {SurveyService} from '../../survey.service';\nimport { AuthService } from '../../auth.service';\n@Component({\n  selector: 'app-survey',\n  templateUrl: './survey.component.html',\n  styleUrls: ['./survey.component.css']\n})\nexport class SurveyComponent extends BasePageComponent implements OnInit {\n  \n  constructor(public auth: AuthService, route : ActivatedRoute, private router: Router, private service: SurveyService) {\n    super(route);\n  }\n  surveys:any;\n\n  getSurveys(){\n    this.service.getSurveys().subscribe(data => this.surveys = data);\n  }\n\n  openSurvey(survey){\n    this.router.navigate(['/open-survey'],{state: survey})\n  }\n\n  ngOnInit(): void {\n    this.getSurveys();\n  }\n\n}\n","<div class=\"body-wrapper\">\n  <div class=\"survey_description\">\n  <app-base-page></app-base-page>\n  </div>\n\n  <div *ngFor='let survey of surveys' class=\"card card_survey\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">{{survey.title}}</h5>\n        <p class=\"card-text\">{{survey.description}}</p>\n        <a href=\"javascript:void(0);\" (click)=\"openSurvey(survey)\" class=\"survey_button\">Answer</a>\n      </div>\n  </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SurveyService {\n  private readonly baseUrl = 'http://localhost:8000/api';\n\n  constructor(private httpClient: HttpClient) { }\n\n  saveSurvey(survey) {\n    return this.httpClient.post(`${this.baseUrl}/survey/create`, survey);\n  }\n\n  updateSurvey(survey) {\n    return this.httpClient.post(`${this.baseUrl}/survey/update`, survey);\n  }\n\n  getSurveys() {\n    return this.httpClient.get(`${this.baseUrl}/survey`);\n  }\n\n  deleteSurvey(id) {\n    return this.httpClient.post(`${this.baseUrl}/survey/delete`, { _id: id });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {BasePageComponent } from '../../partials/base-page/base-page.component';\nimport { ActivatedRoute } from '@angular/router';\nimport {UserService} from '../../user.service';\nimport{ Router} from '@angular/router';\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent extends BasePageComponent implements OnInit {\n\n  constructor(route: ActivatedRoute, private router:Router, private service: UserService) { \n    super(route);\n  }\n  public forename: string;\n  public surname: string;\n  public username: string;\n  public password: string;\n  public email: string;\n  onSubmit(form)\n  {\n    let value = form.form.value;\n    this.service.signUp(value).subscribe(data=>this.router.navigate(['/login']));\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"body-wrapper\">\n<h1>Sign Up</h1>\n<div class=\"registration_form form_border\">\n<form #form=\"ngForm\" (ngSubmit)=\"onSubmit(form)\">\n    <label for=\"forenameLable\">First Name</label>\n    <input required type=\"text\" class=\"form-control\" id=\"forename\" name=\"forename\" [(ngModel)]=\"forename\">\n\n    <div class=\"survey_label\"><label for=\"surnameLable\">Last Name</label></div>\n    <input required type=\"text\" class=\"form-control\" id=\"surname\" name=\"surname\" [(ngModel)]=\"surname\">\n\n    <div class=\"survey_label\"><label for=\"usernameLable\">Username</label></div>\n    <input required type=\"text\" class=\"form-control\" id=\"username\" name=\"username\" [(ngModel)]=\"username\">\n\n    <div class=\"survey_label\"><label for=\"nameLable\">Email</label></div>\n    <input required type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" [(ngModel)]=\"email\">\n\n    <div class=\"survey_label\"><label for=\"passwordLable\">Password</label></div>\n    <input required type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" [(ngModel)]=\"password\">\n     <br>\n    <div>\n        <button type=\"submit\" class=\"survey_button\">Sign Up</button>\n    </div>\n\n</form>\n</div>\n</div>\n\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private router: Router, private authService: AuthService) { }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (localStorage.getItem('access_token')) {\n      return true;\n    }\n    this.router.navigate(['login']);\n    return false;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport{ Router} from '@angular/router';\nimport {SurveyService} from '../../survey.service';\n@Component({\n  selector: 'app-edit-survey',\n  templateUrl: './edit-survey.component.html',\n  styleUrls: ['./edit-survey.component.css']\n})\nexport class EditSurveyComponent implements OnInit {\n  survey: any;\n  method: string;\n  constructor(private router:Router, private service: SurveyService) { }\n\n  onSubmit(form){\n    var value = form.form.value;\n    if(this.method === 'edit'){\n      this.service.updateSurvey(this.formatResponse(value, this.survey._id)).subscribe(data=>this.router.navigate(['/survey-management']));\n    }else{\n      this.service.saveSurvey(this.formatResponse(value)).subscribe(data=>this.router.navigate(['/survey-management']));\n    }\n  }\n\n  formatResponse(value, id = null){\n    var labels = [];\n    var styles = [];\n    for (var prop in value) {\n      if (Object.prototype.hasOwnProperty.call(value, prop)) {\n        \n        if(prop.includes('label')){\n          labels.push(value[prop]);\n        }\n        \n        if(prop.includes('style')){\n          styles.push(value[prop]);\n        }\n      }\n    }\n    let questions = [];\n    labels.forEach((label, index)=>{\n      questions.push({label: label, style:styles[index]});\n    });\n    let response = {title:value.title, description:value.description, questions};\n    if(id){\n      response['_id'] = id;\n    }\n    return response;\n  }\n\n  addField(){\n    this.survey.questions.push({label:'', style:0});\n  }\n\n  ngOnInit(): void {\n    this.survey = window.history.state;\n    if(!this.survey.title){\n      this.method = 'create';\n      this.survey = {questions:[{label:'', style:0}], title:'', description:''};\n    }else{\n      this.method = 'edit';\n    }\n  }\n\n}\n","<div class=\"body-wrapper\">\n  <div class=\"center_form form_border\">\n    <form #form=\"ngForm\" (ngSubmit)=\"onSubmit(form)\">\n        <label for=\"titleLable\">Title</label>\n        <input required type=\"text\" class=\"form-control\" id=\"title\" name=\"title\" [ngModel]=\"survey.title\">\n        <label for=\"descriptionLable\">Description</label>\n        <input required type=\"text\" class=\"form-control\" id=\"description\" name=\"description\" [ngModel]=\"survey.description\">\n\n        <div class=\"question_label\">\n        <label for=\"questions\">Questions</label>\n        </div>\n        <div *ngFor='let question of survey.questions; index as i' class=\"form-group\">\n            <label for=\"labelLable_{{i}}\">Label</label>\n            <input required type=\"text\" class=\"form-control\" id=\"label_{{i}}\" name=\"label_{{i}}\" [ngModel]=\"question.label\">\n            <label for=\"styleLable_{{i}}\">Style</label>\n            <select required class=\"form-control\" id=\"style_{{i}}\" name=\"style_{{i}}\" [ngModel]=\"question.style\">\n              <option value=\"\" disabled>Choose a style</option>\n              <option value=1>Textbox</option>\n              <option value=2>Three option quality</option>\n            </select>\n        </div>\n\n        <div>\n          <a href=\"javascript:void(0);\" (click)=\"addField()\" class=\"survey_button\">Add Question</a>\n          <button type=\"submit\" class=\"survey_button btn_space\">Submit</button>\n      </div>\n    </form>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AuthGuard } from './auth.guard';\nimport { HomeComponent } from './pages/home/home.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { RegistrationComponent } from './pages/registration/registration.component';\nimport { SurveyComponent } from './pages/survey/survey.component';\nimport { SurveyManagementComponent } from './pages/survey-management/survey-management.component';\nimport { UsersComponent } from './pages/users/users.component';\nimport { EditSurveyComponent } from './pages/edit-survey/edit-survey.component';\nimport { EditUserComponent } from './pages/edit-user/edit-user.component';\nimport { OpenSurveyComponent } from './pages/open-survey/open-survey.component';\nimport { ResponseSurveyComponent } from './pages/response-survey/response-survey.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n  { path: 'home', component: HomeComponent, data: { title: 'Home' } },\n  { path: 'survey', component: SurveyComponent, canActivate: [AuthGuard], data: { title: 'Survey' } },\n  { path: 'survey-management', component: SurveyManagementComponent, canActivate: [AuthGuard], data: { title: 'Survey Management' } },\n  { path: 'users', component: UsersComponent, canActivate: [AuthGuard], data: { title: 'Users Management' } },\n  { path: 'response-survey', component: ResponseSurveyComponent, canActivate: [AuthGuard], data: { title: 'Response Survey Management' } },\n  { path: 'open-survey', component: OpenSurveyComponent },\n  { path: 'edit-survey', component: EditSurveyComponent, canActivate: [AuthGuard] },\n  { path: 'edit-user', component: EditUserComponent, canActivate: [AuthGuard] },\n  { path: 'login', component: LoginComponent },\n  { path: 'registration', component: RegistrationComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private readonly baseUrl = 'http://localhost:8000/api/users';\n\n  constructor(private httpClient: HttpClient) { }\n\n  saveUser(user) {\n    return this.httpClient.post(`${this.baseUrl}`, user);\n  }\n\n  signUp(user) {\n    return this.httpClient.post(`${this.baseUrl}/signUp`, user);\n  }\n\n  updateUser(user) {\n    return this.httpClient.put(`${this.baseUrl}/${user.username}`, user);\n  }\n\n  getUsers() {\n    return this.httpClient.get(`${this.baseUrl}/list`);\n  }\n\n  deleteUser(user) {\n    return this.httpClient.post(`${this.baseUrl}/delete`, { username: user.username });\n  }\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}